group 'com.mumukiller'

version '1.0-SNAPSHOT'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.9"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: "jacoco"
//apply plugin: "com.ewerk.gradle.plugins.querydsl"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    compile 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'org.eclipse.jetty:jetty-server:9.4.8.v20171121'
    compile 'org.eclipse.jetty:jetty-servlet:9.4.8.v20171121'
    compile 'org.eclipse.jetty:jetty-servlets:9.4.8.v20171121'

    compile 'com.h2database:h2:1.4.196'

    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.slf4j:slf4j-log4j12:1.7.25'

    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.26'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet-core:2.26'
    compile 'org.glassfish.jersey.containers:jersey-container-jetty-http:2.26'
    compile 'org.glassfish.jersey.core:jersey-server:2.26'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.26'
    compile 'org.glassfish.jersey.media:jersey-media-moxy:2.26'
    compile 'org.glassfish.jersey.inject:jersey-hk2:2.26'


    compile 'com.fasterxml.jackson.core:jackson-annotations:2.9.4'
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.9.4'

    compile 'org.projectlombok:lombok:1.16.20'

    compile 'com.querydsl:querydsl-sql:4.1.4'
    compile 'com.querydsl:querydsl-jdo:4.1.4'
    compile 'com.querydsl:querydsl-apt:4.1.4'
    compile 'com.querydsl:querydsl-sql-codegen:4.1.4'

    compile 'com.zaxxer:HikariCP:2.7.8'


    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:2.26'
    testCompile 'junit:junit:4.12'
}


ext {
    jacocoExclusions = ['com/mumukiller/transfer/entity/**',
                        'com/mumukiller/transfer/dto/**',
                        'com/mumukiller/transfer/exception/dto/**']
}

test.finalizedBy 'jacocoTestReport'

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: jacocoExclusions)
        })
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'BUNDLE'
            excludes = jacocoExclusions.stream().map{it.replace('/','.')}.collect()
            limit {
                counter = 'INSTRUCTION'
                minimum = 0.5
            }
            limit {
                counter = 'METHOD'
                minimum = 0.7
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification

//querydsl {
//    querydslSourcesDir = "$buildDir/generated-sources/apt"
//    jdo = true
//}


